"What is partitioning in the context of databases, and why is it used?";"<p>Partitioning is the process of breaking a large database into smaller subsets called partitions. It's used to improve scalability when data volume is too large for a single machine.</p><p><i>(Reference: Partitioning, p. 199)</i></p>"
"What are the two main approaches to partitioning data?";"<p>The two main approaches to partitioning data are:</p><ol><li>Key range partitioning</li><li>Hash partitioning</li></ol><p><i>(Reference: Partitioning of Key-Value Data, p. 201-203)</i></p>"
"What is the main advantage and disadvantage of key range partitioning?";"<p><strong>Advantage:</strong></p><ul><li>It allows efficient range queries</li></ul><p><strong>Disadvantage:</strong></p><ul><li>It can lead to hot spots if keys are accessed together frequently</li></ul><p><i>(Reference: Partitioning by Key Range, p. 202-203)</i></p>"
"How does hash partitioning work, and what are its pros and cons?";"<p>Hash partitioning:</p><ul><li>A hash function is applied to each key</li><li>A partition owns a range of hashes</li></ul><p><strong>Pro:</strong></p><ul><li>It distributes load more evenly</li></ul><p><strong>Con:</strong></p><ul><li>It makes range queries inefficient</li></ul><p><i>(Reference: Partitioning by Hash of Key, p. 203-204)</i></p>"
"What is consistent hashing and why is it rarely used in practice for databases?";"<p>Consistent hashing is a way of evenly distributing load across an internet-wide system of caches, using randomly chosen partition boundaries. It's rarely used in practice for databases because it doesn't work very well for them.</p><p><i>(Reference: Consistent Hashing, p. 204)</i></p>"
"How can skewed workloads and hot spots be mitigated in partitioned systems?";"<p>Techniques to mitigate skewed workloads and hot spots include:</p><ol><li>Adding a random number to hot keys</li><li>Splitting writes across different keys</li><li>Combining reads</li></ol><p><i>(Reference: Skewed Workloads and Relieving Hot Spots, p. 205)</i></p>"
"What are the two main approaches to partitioning secondary indexes?";"<p>The two main approaches to partitioning secondary indexes are:</p><ol><li>Document-based partitioning (local indexes)</li><li>Term-based partitioning (global indexes)</li></ol><p><i>(Reference: Partitioning and Secondary Indexes, p. 206-208)</i></p>"
"What is rebalancing in partitioned databases, and what are three strategies for it?";"<p>Rebalancing is moving data between nodes to maintain fair load distribution.</p><p>Three strategies for rebalancing:</p><ol><li>Fixed number of partitions</li><li>Dynamic partitioning</li><li>Partitioning proportionally to nodes</li></ol><p><i>(Reference: Rebalancing Partitions, Strategies for Rebalancing, p. 209-213)</i></p>"
"What is the main advantage of dynamic partitioning?";"<p>The main advantage of dynamic partitioning is that the number of partitions adapts to the total data volume, allowing for better resource management.</p><p><i>(Reference: Dynamic partitioning, p. 212)</i></p>"
"What are the three general approaches to request routing in partitioned systems?";"<p>The three general approaches to request routing in partitioned systems are:</p><ol><li>Allow clients to contact any node</li><li>Send requests to a routing tier first</li><li>Require clients to be aware of the partitioning</li></ol><p><i>(Reference: Request Routing, p. 214-215)</i></p>"
"How do massively parallel processing (MPP) relational databases handle complex queries across partitions?";"<p>MPP query optimizers break complex queries into execution stages and partitions, which can be executed in parallel on different nodes.</p><p><i>(Reference: Parallel Query Execution, p. 216)</i></p>"
"What are the challenges of implementing term-partitioned secondary indexes?";"<p>Challenges of implementing term-partitioned secondary indexes:</p><ol><li>Updates to global secondary indexes are often asynchronous, which can lead to inconsistencies</li><li>It may require distributed transactions across multiple partitions, which is not supported by all databases</li></ol><p><i>(Reference: Partitioning Secondary Indexes by Term, p. 208-209)</i></p>"
"What are the trade-offs between automatic and manual rebalancing?";"<p>Trade-offs between automatic and manual rebalancing:</p><p><strong>Automatic rebalancing:</strong></p><ul><li>Convenient</li><li>Can be unpredictable</li><li>Potentially dangerous when combined with automatic failure detection</li></ul><p><strong>Manual rebalancing:</strong></p><ul><li>Slower</li><li>Can help prevent operational surprises</li></ul><p><i>(Reference: Operations: Automatic or Manual Rebalancing, p. 213-214)</i></p>"
"How does partitioning interact with replication in distributed databases?";"<p>Partitioning is usually combined with replication so that copies of each partition are stored on multiple nodes. This improves fault tolerance but adds complexity to the system.</p><p><i>(Reference: Partitioning and Replication, p. 199-200)</i></p>"